{"ast":null,"code":"var _jsxFileName = \"/Users/licop/Documents/GitHub/licop-kanban/src/KanbanCard.js\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { css } from '@emotion/react';\nimport AdminContext from './context/AdminContext';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const kanbanCardStyles = css`\n  margin-bottom: 1rem;\n  padding: 0.6rem 1rem;\n  border: 1px solid gray;\n  border-radius: 1rem;\n  list-style: none;\n  background-color: rgba(255, 255, 255, 0.4);\n  text-align: left;\n\n  &:hover {\n    box-shadow: 0 0.3rem 0.3rem rgba(0, 0, 0, 0.3), inset 0 1px #fff;\n  }\n`;\nexport const kanbanCardTitleStyles = css`\n  min-height: 3rem;\n`;\nconst MINUTE = 60 * 1000;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\nconst UPDATE_INTERVAL = MINUTE;\nconst KanbanCard = _ref => {\n  _s();\n  let {\n    title,\n    status,\n    onDragStart\n  } = _ref;\n  const [displayTime, setDisplayTime] = useState(status);\n  const isAdmin = useContext(AdminContext);\n  useEffect(() => {\n    const updateDisplayTime = () => {\n      const timePassed = new Date() - new Date(status);\n      let relativeTime = '刚刚';\n      if (MINUTE <= timePassed && timePassed < HOUR) {\n        relativeTime = `${Math.ceil(timePassed / MINUTE)} 分钟前`;\n      } else if (HOUR <= timePassed && timePassed < DAY) {\n        relativeTime = `${Math.ceil(timePassed / HOUR)} 小时前`;\n      } else if (DAY <= timePassed) {\n        relativeTime = `${Math.ceil(timePassed / DAY)} 天前`;\n      }\n      setDisplayTime(relativeTime);\n    };\n    const intervalId = setInterval(updateDisplayTime, UPDATE_INTERVAL);\n    updateDisplayTime();\n    return function cleanUp() {\n      clearInterval(intervalId);\n    };\n  }, [status]);\n  const handleDragStart = evt => {\n    evt.dataTransfer.effectAllowed = 'move';\n    evt.dataTransfer.setData('text/plain', title);\n    onDragStart && onDragStart(evt);\n  };\n  return _jsxDEV(\"li\", {\n    css: kanbanCardStyles,\n    draggable: true,\n    onDragStart: handleDragStart,\n    children: [_jsxDEV(\"div\", {\n      css: kanbanCardTitleStyles,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: css`\n        text-align: right;\n        font-size: 0.8rem;\n        color: #333;\n      `,\n      children: [displayTime, isAdmin && onRemove && _jsxDEV(\"button\", {\n        onClick: () => onRemove(title),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanCard, \"0d61vo8AE3PvKwB2cFZ/LOK8A+k=\");\n_c = KanbanCard;\nexport default KanbanCard;\nvar _c;\n$RefreshReg$(_c, \"KanbanCard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","css","AdminContext","kanbanCardStyles","kanbanCardTitleStyles","MINUTE","HOUR","DAY","UPDATE_INTERVAL","KanbanCard","title","status","onDragStart","displayTime","setDisplayTime","isAdmin","updateDisplayTime","timePassed","Date","relativeTime","Math","ceil","intervalId","setInterval","cleanUp","clearInterval","handleDragStart","evt","dataTransfer","effectAllowed","setData","onRemove"],"sources":["/Users/licop/Documents/GitHub/licop-kanban/src/KanbanCard.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { css } from '@emotion/react';\nimport AdminContext from './context/AdminContext';\n\nexport const kanbanCardStyles = css`\n  margin-bottom: 1rem;\n  padding: 0.6rem 1rem;\n  border: 1px solid gray;\n  border-radius: 1rem;\n  list-style: none;\n  background-color: rgba(255, 255, 255, 0.4);\n  text-align: left;\n\n  &:hover {\n    box-shadow: 0 0.3rem 0.3rem rgba(0, 0, 0, 0.3), inset 0 1px #fff;\n  }\n`;\n\nexport const kanbanCardTitleStyles = css`\n  min-height: 3rem;\n`;\n\nconst MINUTE = 60 * 1000;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\nconst UPDATE_INTERVAL = MINUTE;\n\nconst KanbanCard = ({ title, status, onDragStart }) => {\n  const [displayTime, setDisplayTime] = useState(status);\n  const isAdmin = useContext(AdminContext)\n  \n  useEffect(() => {\n    const updateDisplayTime = () => {\n      const timePassed = new Date() - new Date(status);\n      let relativeTime = '刚刚';\n      if (MINUTE <= timePassed && timePassed < HOUR) {\n        relativeTime = `${Math.ceil(timePassed / MINUTE)} 分钟前`;\n      } else if (HOUR <= timePassed && timePassed < DAY) {\n        relativeTime = `${Math.ceil(timePassed / HOUR)} 小时前`;\n      } else if (DAY <= timePassed) {\n        relativeTime = `${Math.ceil(timePassed / DAY)} 天前`;\n      }\n      setDisplayTime(relativeTime);\n    };\n\n    const intervalId = setInterval(updateDisplayTime, UPDATE_INTERVAL);\n    updateDisplayTime();\n\n    return function cleanUp () {\n      clearInterval(intervalId);\n    };\n  }, [status]);\n\n  const handleDragStart = (evt) => {\n    evt.dataTransfer.effectAllowed = 'move';\n    evt.dataTransfer.setData('text/plain', title);\n    onDragStart && onDragStart(evt);\n  };\n\n  return (\n    <li css={kanbanCardStyles} draggable onDragStart={handleDragStart}>\n      <div css={kanbanCardTitleStyles}>{title}</div>\n      <div css={css`\n        text-align: right;\n        font-size: 0.8rem;\n        color: #333;\n      `}>\n        {displayTime}\n        {isAdmin && onRemove && (<button onClick={() => onRemove(title)}>X</button>)}\n      </div>\n    </li>\n  );\n};\n\nexport default KanbanCard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,YAAY,MAAM,wBAAwB;AAAC;AAElD,OAAO,MAAMC,gBAAgB,GAAGF,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMG,qBAAqB,GAAGH,GAAI;AACzC;AACA,CAAC;AAED,MAAMI,MAAM,GAAG,EAAE,GAAG,IAAI;AACxB,MAAMC,IAAI,GAAG,EAAE,GAAGD,MAAM;AACxB,MAAME,GAAG,GAAG,EAAE,GAAGD,IAAI;AACrB,MAAME,eAAe,GAAGH,MAAM;AAE9B,MAAMI,UAAU,GAAG,QAAoC;EAAA;EAAA,IAAnC;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAY,CAAC;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAACa,MAAM,CAAC;EACtD,MAAMI,OAAO,GAAGf,UAAU,CAACE,YAAY,CAAC;EAExCH,SAAS,CAAC,MAAM;IACd,MAAMiB,iBAAiB,GAAG,MAAM;MAC9B,MAAMC,UAAU,GAAG,IAAIC,IAAI,EAAE,GAAG,IAAIA,IAAI,CAACP,MAAM,CAAC;MAChD,IAAIQ,YAAY,GAAG,IAAI;MACvB,IAAId,MAAM,IAAIY,UAAU,IAAIA,UAAU,GAAGX,IAAI,EAAE;QAC7Ca,YAAY,GAAI,GAAEC,IAAI,CAACC,IAAI,CAACJ,UAAU,GAAGZ,MAAM,CAAE,MAAK;MACxD,CAAC,MAAM,IAAIC,IAAI,IAAIW,UAAU,IAAIA,UAAU,GAAGV,GAAG,EAAE;QACjDY,YAAY,GAAI,GAAEC,IAAI,CAACC,IAAI,CAACJ,UAAU,GAAGX,IAAI,CAAE,MAAK;MACtD,CAAC,MAAM,IAAIC,GAAG,IAAIU,UAAU,EAAE;QAC5BE,YAAY,GAAI,GAAEC,IAAI,CAACC,IAAI,CAACJ,UAAU,GAAGV,GAAG,CAAE,KAAI;MACpD;MACAO,cAAc,CAACK,YAAY,CAAC;IAC9B,CAAC;IAED,MAAMG,UAAU,GAAGC,WAAW,CAACP,iBAAiB,EAAER,eAAe,CAAC;IAClEQ,iBAAiB,EAAE;IAEnB,OAAO,SAASQ,OAAO,GAAI;MACzBC,aAAa,CAACH,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,MAAMe,eAAe,GAAIC,GAAG,IAAK;IAC/BA,GAAG,CAACC,YAAY,CAACC,aAAa,GAAG,MAAM;IACvCF,GAAG,CAACC,YAAY,CAACE,OAAO,CAAC,YAAY,EAAEpB,KAAK,CAAC;IAC7CE,WAAW,IAAIA,WAAW,CAACe,GAAG,CAAC;EACjC,CAAC;EAED,OACE;IAAI,GAAG,EAAExB,gBAAiB;IAAC,SAAS;IAAC,WAAW,EAAEuB,eAAgB;IAAA,WAChE;MAAK,GAAG,EAAEtB,qBAAsB;MAAA,UAAEM;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,EAC9C;MAAK,GAAG,EAAET,GAAI;AACpB;AACA;AACA;AACA,OAAQ;MAAA,WACCY,WAAW,EACXE,OAAO,IAAIgB,QAAQ,IAAK;QAAQ,OAAO,EAAE,MAAMA,QAAQ,CAACrB,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QACxE;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAET,CAAC;AAAC,GA7CID,UAAU;AAAA,KAAVA,UAAU;AA+ChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}