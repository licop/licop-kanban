{"ast":null,"code":"var _jsxFileName = \"/Users/licop/Documents/GitHub/licop-kanban/src/KanbanCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/react';\nimport { MINUTE, HOUR, DAY, UPDATE_INTERVAL, kanbanCardStyles, kanbanCardTitleStyles } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KanbanCard = _ref => {\n  _s();\n  let {\n    title,\n    status,\n    onDragStart\n  } = _ref;\n  const [displayTime, setDisplayTime] = useState(status);\n  useEffect(() => {\n    const updateDisplayTime = () => {\n      const timePassed = new Date() - new Date(status);\n      let relativeTime = '刚刚';\n      if (MINUTE <= timePassed && timePassed < HOUR) {\n        relativeTime = `${Math.ceil(timePassed / MINUTE)} 分钟前`;\n      } else if (HOUR <= timePassed && timePassed < DAY) {\n        relativeTime = `${Math.ceil(timePassed / HOUR)} 小时前`;\n      } else if (DAY <= timePassed) {\n        relativeTime = `${Math.ceil(timePassed / DAY)} 天前`;\n      }\n      setDisplayTime(relativeTime);\n    };\n    const intervalId = setInterval(updateDisplayTime, UPDATE_INTERVAL);\n    updateDisplayTime();\n    return function cleanUp() {\n      clearInterval(intervalId);\n    };\n  }, [status]);\n  const handleDragStart = evt => {\n    evt.dataTransfer.effectAllowed = 'move';\n    evt.dataTransfer.setData('text/plain', title);\n    onDragStart && onDragStart(evt);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    css: kanbanCardStyles,\n    draggable: true,\n    onDragStart: handleDragStart,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      css: kanbanCardTitleStyles,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      css: css`\n        text-align: right;\n        font-size: 0.8rem;\n        color: #333;\n      `,\n      children: displayTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanCard, \"WePdfdmWEAQdccS2j3kRKCFLfZI=\");\n_c = KanbanCard;\nvar _c;\n$RefreshReg$(_c, \"KanbanCard\");","map":{"version":3,"names":["React","useState","useEffect","css","MINUTE","HOUR","DAY","UPDATE_INTERVAL","kanbanCardStyles","kanbanCardTitleStyles","KanbanCard","title","status","onDragStart","displayTime","setDisplayTime","updateDisplayTime","timePassed","Date","relativeTime","Math","ceil","intervalId","setInterval","cleanUp","clearInterval","handleDragStart","evt","dataTransfer","effectAllowed","setData"],"sources":["/Users/licop/Documents/GitHub/licop-kanban/src/KanbanCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/react';\nimport { MINUTE, HOUR, DAY, UPDATE_INTERVAL, kanbanCardStyles, kanbanCardTitleStyles } from './App';\n\nexport const KanbanCard = ({ title, status, onDragStart }) => {\n  const [displayTime, setDisplayTime] = useState(status);\n  useEffect(() => {\n    const updateDisplayTime = () => {\n      const timePassed = new Date() - new Date(status);\n      let relativeTime = '刚刚';\n      if (MINUTE <= timePassed && timePassed < HOUR) {\n        relativeTime = `${Math.ceil(timePassed / MINUTE)} 分钟前`;\n      } else if (HOUR <= timePassed && timePassed < DAY) {\n        relativeTime = `${Math.ceil(timePassed / HOUR)} 小时前`;\n      } else if (DAY <= timePassed) {\n        relativeTime = `${Math.ceil(timePassed / DAY)} 天前`;\n      }\n      setDisplayTime(relativeTime);\n    };\n\n    const intervalId = setInterval(updateDisplayTime, UPDATE_INTERVAL);\n    updateDisplayTime();\n\n    return function cleanUp () {\n      clearInterval(intervalId);\n    };\n  }, [status]);\n\n  const handleDragStart = (evt) => {\n    evt.dataTransfer.effectAllowed = 'move';\n    evt.dataTransfer.setData('text/plain', title);\n    onDragStart && onDragStart(evt);\n  };\n\n  return (\n    <li css={kanbanCardStyles} draggable onDragStart={handleDragStart}>\n      <div css={kanbanCardTitleStyles}>{title}</div>\n      <div css={css`\n        text-align: right;\n        font-size: 0.8rem;\n        color: #333;\n      `}>{displayTime}</div>\n    </li>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,qBAAqB,QAAQ,OAAO;AAAC;AAEpG,OAAO,MAAMC,UAAU,GAAG,QAAoC;EAAA;EAAA,IAAnC;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAY,CAAC;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACW,MAAM,CAAC;EACtDV,SAAS,CAAC,MAAM;IACd,MAAMc,iBAAiB,GAAG,MAAM;MAC9B,MAAMC,UAAU,GAAG,IAAIC,IAAI,EAAE,GAAG,IAAIA,IAAI,CAACN,MAAM,CAAC;MAChD,IAAIO,YAAY,GAAG,IAAI;MACvB,IAAIf,MAAM,IAAIa,UAAU,IAAIA,UAAU,GAAGZ,IAAI,EAAE;QAC7Cc,YAAY,GAAI,GAAEC,IAAI,CAACC,IAAI,CAACJ,UAAU,GAAGb,MAAM,CAAE,MAAK;MACxD,CAAC,MAAM,IAAIC,IAAI,IAAIY,UAAU,IAAIA,UAAU,GAAGX,GAAG,EAAE;QACjDa,YAAY,GAAI,GAAEC,IAAI,CAACC,IAAI,CAACJ,UAAU,GAAGZ,IAAI,CAAE,MAAK;MACtD,CAAC,MAAM,IAAIC,GAAG,IAAIW,UAAU,EAAE;QAC5BE,YAAY,GAAI,GAAEC,IAAI,CAACC,IAAI,CAACJ,UAAU,GAAGX,GAAG,CAAE,KAAI;MACpD;MACAS,cAAc,CAACI,YAAY,CAAC;IAC9B,CAAC;IAED,MAAMG,UAAU,GAAGC,WAAW,CAACP,iBAAiB,EAAET,eAAe,CAAC;IAClES,iBAAiB,EAAE;IAEnB,OAAO,SAASQ,OAAO,GAAI;MACzBC,aAAa,CAACH,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,MAAMc,eAAe,GAAIC,GAAG,IAAK;IAC/BA,GAAG,CAACC,YAAY,CAACC,aAAa,GAAG,MAAM;IACvCF,GAAG,CAACC,YAAY,CAACE,OAAO,CAAC,YAAY,EAAEnB,KAAK,CAAC;IAC7CE,WAAW,IAAIA,WAAW,CAACc,GAAG,CAAC;EACjC,CAAC;EAED,oBACE;IAAI,GAAG,EAAEnB,gBAAiB;IAAC,SAAS;IAAC,WAAW,EAAEkB,eAAgB;IAAA,wBAChE;MAAK,GAAG,EAAEjB,qBAAsB;MAAA,UAAEE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAC9C;MAAK,GAAG,EAAER,GAAI;AACpB;AACA;AACA;AACA,OAAQ;MAAA,UAAEW;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACnB;AAET,CAAC;AAAC,GAxCWJ,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}