{"ast":null,"code":"var _jsxFileName = \"/Users/licop/Documents/GitHub/licop-kanban/src/KanbanNewCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { kanbanCardStyles, kanbanCardTitleStyles } from './KanbanCard';\nimport { css } from '@emotion/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanNewCard = _ref => {\n  _s();\n  let {\n    onSubmit\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const inputElem = useRef(null);\n  // 保证组件只会在挂载提交是执行一次，组件更新时不在执行\n  useEffect(() => {\n    inputElem.current.focus();\n  }, []);\n  const handleChange = evt => {\n    setTitle(evt.target.value);\n  };\n  const handleKeyDown = evt => {\n    if (evt.key === 'Enter') {\n      onSubmit(title);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    css: kanbanCardStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u6DFB\\u52A0\\u65B0\\u5361\\u7247\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      css: kanbanCardTitleStyles,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputElem,\n        value: title,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanNewCard, \"Db8hvyB3pfzjjDhNCCtwbHQmkpg=\");\n_c = KanbanNewCard;\nvar _c;\n$RefreshReg$(_c, \"KanbanNewCard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","kanbanCardStyles","kanbanCardTitleStyles","css","KanbanNewCard","onSubmit","title","setTitle","inputElem","current","focus","handleChange","evt","target","value","handleKeyDown","key"],"sources":["/Users/licop/Documents/GitHub/licop-kanban/src/KanbanNewCard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { kanbanCardStyles, kanbanCardTitleStyles } from './KanbanCard';\nimport { css } from '@emotion/react';\n\nconst KanbanNewCard = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const inputElem = useRef(null);\n  // 保证组件只会在挂载提交是执行一次，组件更新时不在执行\n  useEffect(() => {\n    inputElem.current.focus();\n  }, []);\n  const handleChange = (evt) => {\n    setTitle(evt.target.value);\n  };\n  const handleKeyDown = (evt) => {\n    if (evt.key === 'Enter') {\n      onSubmit(title);\n    }\n  };\n  return (\n    <li css={kanbanCardStyles}>\n      <h3>添加新卡片</h3>\n      <div css={kanbanCardTitleStyles}>\n        <input type='text' ref={inputElem} value={title} onChange={handleChange} onKeyDown={handleKeyDown} />\n      </div>\n    </li>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,gBAAgB,EAAEC,qBAAqB,QAAQ,cAAc;AACtE,SAASC,GAAG,QAAQ,gBAAgB;AAAC;AAErC,MAAMC,aAAa,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B;EACAD,SAAS,CAAC,MAAM;IACdS,SAAS,CAACC,OAAO,CAACC,KAAK,EAAE;EAC3B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,YAAY,GAAIC,GAAG,IAAK;IAC5BL,QAAQ,CAACK,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EACD,MAAMC,aAAa,GAAIH,GAAG,IAAK;IAC7B,IAAIA,GAAG,CAACI,GAAG,KAAK,OAAO,EAAE;MACvBX,QAAQ,CAACC,KAAK,CAAC;IACjB;EACF,CAAC;EACD,oBACE;IAAI,GAAG,EAAEL,gBAAiB;IAAA,wBACxB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAK,GAAG,EAAEC,qBAAsB;MAAA,uBAC9B;QAAO,IAAI,EAAC,MAAM;QAAC,GAAG,EAAEM,SAAU;QAAC,KAAK,EAAEF,KAAM;QAAC,QAAQ,EAAEK,YAAa;QAAC,SAAS,EAAEI;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjG;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAET,CAAC;AAAC,GAvBIX,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}